{"ast":null,"code":"import React from\"react\";import{sadir}from\"../../../tables/table\";import{ReactSearchAutocomplete}from\"react-search-autocomplete\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(props){function getItems(){let items=[];let i=0;props.bikoretKind.forEach(subject=>{subject.list.forEach(quatsion=>{items.push({id:i,name:quatsion.quatsion});i++;});});return items;}const handleOnSearch=(string,results)=>{// onSearch will have as the first callback parameter\n// the string searched and for the second the results.\nconsole.log(string,results);};const handleOnHover=result=>{// the item hovered\nconsole.log(result);};const handleOnSelect=item=>{// the item selected\nprops.setSelected(item);console.log(item.id);};const handleOnFocus=()=>{console.log(\"Focused\");};const formatResult=item=>{return item;// return (<p dangerouslySetInnerHTML={{__html: '<strong>'+item+'</strong>'}}></p>); //To format result as html\n};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:/*#__PURE__*/_jsx(\"div\",{style:{width:\"70vw\",margin:\"10px\",marginTop:\"40px\",marginBottom:\"40px\"},children:/*#__PURE__*/_jsx(ReactSearchAutocomplete,{items:getItems(),onSearch:handleOnSearch,onHover:handleOnHover,onSelect:handleOnSelect,onFocus:handleOnFocus,autoFocus:true,formatResult:formatResult})})})});}export default App;","map":{"version":3,"sources":["C:/Users/chenb/Downloads/react/src/components/Watch/Sheet/Serch.js"],"names":["React","sadir","ReactSearchAutocomplete","App","props","getItems","items","i","bikoretKind","forEach","subject","list","quatsion","push","id","name","handleOnSearch","string","results","console","log","handleOnHover","result","handleOnSelect","item","setSelected","handleOnFocus","formatResult","width","margin","marginTop","marginBottom"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,uBAAtB,CACA,OAASC,uBAAT,KAAwC,2BAAxC,C,2CAEA,QAASC,CAAAA,GAAT,CAAaC,KAAb,CAAoB,CAClB,QAASC,CAAAA,QAAT,EAAoB,CAClB,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CACA,GAAIC,CAAAA,CAAC,CAAG,CAAR,CACAH,KAAK,CAACI,WAAN,CAAkBC,OAAlB,CAA2BC,OAAD,EAAa,CACrCA,OAAO,CAACC,IAAR,CAAaF,OAAb,CAAsBG,QAAD,EAAc,CACjCN,KAAK,CAACO,IAAN,CAAW,CACTC,EAAE,CAAEP,CADK,CAETQ,IAAI,CAAEH,QAAQ,CAACA,QAFN,CAAX,EAIAL,CAAC,GACF,CAND,EAOD,CARD,EASA,MAAOD,CAAAA,KAAP,CACD,CAED,KAAMU,CAAAA,cAAc,CAAG,CAACC,MAAD,CAASC,OAAT,GAAqB,CAC1C;AACA;AACAC,OAAO,CAACC,GAAR,CAAYH,MAAZ,CAAoBC,OAApB,EACD,CAJD,CAMA,KAAMG,CAAAA,aAAa,CAAIC,MAAD,EAAY,CAChC;AACAH,OAAO,CAACC,GAAR,CAAYE,MAAZ,EACD,CAHD,CAKA,KAAMC,CAAAA,cAAc,CAAIC,IAAD,EAAU,CAC/B;AACApB,KAAK,CAACqB,WAAN,CAAkBD,IAAlB,EACAL,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACV,EAAjB,EACD,CAJD,CAMA,KAAMY,CAAAA,aAAa,CAAG,IAAM,CAC1BP,OAAO,CAACC,GAAR,CAAY,SAAZ,EACD,CAFD,CAIA,KAAMO,CAAAA,YAAY,CAAIH,IAAD,EAAU,CAC7B,MAAOA,CAAAA,IAAP,CACA;AACD,CAHD,CAKA,mBACE,YAAK,SAAS,CAAC,KAAf,uBACE,eAAQ,SAAS,CAAC,YAAlB,uBACE,YACE,KAAK,CAAE,CACLI,KAAK,CAAE,MADF,CAELC,MAAM,CAAE,MAFH,CAGLC,SAAS,CAAE,MAHN,CAILC,YAAY,CAAE,MAJT,CADT,uBAQE,KAAC,uBAAD,EACE,KAAK,CAAE1B,QAAQ,EADjB,CAEE,QAAQ,CAAEW,cAFZ,CAGE,OAAO,CAAEK,aAHX,CAIE,QAAQ,CAAEE,cAJZ,CAKE,OAAO,CAAEG,aALX,CAME,SAAS,KANX,CAOE,YAAY,CAAEC,YAPhB,EARF,EADF,EADF,EADF,CAwBD,CAED,cAAexB,CAAAA,GAAf","sourcesContent":["import React from \"react\";\nimport { sadir } from \"../../../tables/table\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nfunction App(props) {\n  function getItems() {\n    let items = [];\n    let i = 0;\n    props.bikoretKind.forEach((subject) => {\n      subject.list.forEach((quatsion) => {\n        items.push({\n          id: i,\n          name: quatsion.quatsion\n        });\n        i++;\n      });\n    });\n    return items;\n  }\n\n  const handleOnSearch = (string, results) => {\n    // onSearch will have as the first callback parameter\n    // the string searched and for the second the results.\n    console.log(string, results);\n  };\n\n  const handleOnHover = (result) => {\n    // the item hovered\n    console.log(result);\n  };\n\n  const handleOnSelect = (item) => {\n    // the item selected\n    props.setSelected(item);\n    console.log(item.id);\n  };\n\n  const handleOnFocus = () => {\n    console.log(\"Focused\");\n  };\n\n  const formatResult = (item) => {\n    return item;\n    // return (<p dangerouslySetInnerHTML={{__html: '<strong>'+item+'</strong>'}}></p>); //To format result as html\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div\n          style={{\n            width: \"70vw\",\n            margin: \"10px\",\n            marginTop: \"40px\",\n            marginBottom: \"40px\"\n          }}\n        >\n          <ReactSearchAutocomplete\n            items={getItems()}\n            onSearch={handleOnSearch}\n            onHover={handleOnHover}\n            onSelect={handleOnSelect}\n            onFocus={handleOnFocus}\n            autoFocus\n            formatResult={formatResult}\n          />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}