{"ast":null,"code":"import{script_scoreSadir}from\"../../../scripts/Score/CalaulateScoreSadir\";import{useState}from\"react\";import\"./table.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const rowStyle={boxSizing:\"border-box\",flexShrink:0,display:\"flex\",flexDirection:\"row\",justifyContent:\"space-evenly\",alignItems:\"center\",backgroundColor:\"#f6f8f8\",overflow:\"visible\",borderColor:\"#222\",borderTopWidth:1,borderBottomWidth:1,borderLeftWidth:0,borderRightWidth:0};export default function Table(props){let rows=props.rows;let table=rows.map(row=>/*#__PURE__*/_jsxs(\"ul\",{style:rowStyle,children:[/*#__PURE__*/_jsx(\"li\",{children:row._rawData[2]}),/*#__PURE__*/_jsx(\"li\",{children:row._rawData[3]}),/*#__PURE__*/_jsx(\"li\",{children:row._rawData[4]})]}));let listQutsion=props.bikoretKind.map(subject=>{return subject.list.map(q=>/*#__PURE__*/_jsx(Quatsion,{row:rows[q.index],q:q}));});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:listQutsion}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>script_scoreSadir(rows),children:\"\\u05E6\\u05D9\\u05D5\\u05DF\"}),table]});}function Quatsion(props){const[open,setOpen]=useState(false);let className=\"box-2\";if(open){className=className+\"open\";}return/*#__PURE__*/_jsxs(\"div\",{onClick:e=>{setOpen(!open);//  e.target.classList.add(\"open\");\n// console.log(e.target.classList);\n},className:className,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"box-3\",children:[\"(\",props.q.index,\" \",props.q.quatsion,\"  \"]}),open?/*#__PURE__*/_jsx(\"div\",{className:\"box-3\",children:props.row._rawData[3]}):/*#__PURE__*/_jsx(_Fragment,{})]});}","map":{"version":3,"sources":["C:/Users/chenb/Downloads/react/src/components/Watch/Sheet/Table.js"],"names":["script_scoreSadir","useState","rowStyle","boxSizing","flexShrink","display","flexDirection","justifyContent","alignItems","backgroundColor","overflow","borderColor","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","Table","props","rows","table","map","row","_rawData","listQutsion","bikoretKind","subject","list","q","index","Quatsion","open","setOpen","className","e","quatsion"],"mappings":"AAAA,OAASA,iBAAT,KAAkC,4CAAlC,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAO,aAAP,C,6IACA,KAAMC,CAAAA,QAAQ,CAAG,CACfC,SAAS,CAAE,YADI,CAEfC,UAAU,CAAE,CAFG,CAIfC,OAAO,CAAE,MAJM,CAKfC,aAAa,CAAE,KALA,CAMfC,cAAc,CAAE,cAND,CAOfC,UAAU,CAAE,QAPG,CAQfC,eAAe,CAAE,SARF,CASfC,QAAQ,CAAE,SATK,CAUfC,WAAW,CAAE,MAVE,CAWfC,cAAc,CAAE,CAXD,CAYfC,iBAAiB,CAAE,CAZJ,CAafC,eAAe,CAAE,CAbF,CAcfC,gBAAgB,CAAE,CAdH,CAAjB,CAiBA,cAAe,SAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,CACnC,GAAIC,CAAAA,IAAI,CAAGD,KAAK,CAACC,IAAjB,CACA,GAAIC,CAAAA,KAAK,CAAGD,IAAI,CAACE,GAAL,CAAUC,GAAD,eACnB,YAAI,KAAK,CAAEnB,QAAX,wBACE,oBAAKmB,GAAG,CAACC,QAAJ,CAAa,CAAb,CAAL,EADF,cAEE,oBAAKD,GAAG,CAACC,QAAJ,CAAa,CAAb,CAAL,EAFF,cAGE,oBAAKD,GAAG,CAACC,QAAJ,CAAa,CAAb,CAAL,EAHF,GADU,CAAZ,CAQA,GAAIC,CAAAA,WAAW,CAAGN,KAAK,CAACO,WAAN,CAAkBJ,GAAlB,CAAuBK,OAAD,EAAa,CACnD,MAAOA,CAAAA,OAAO,CAACC,IAAR,CAAaN,GAAb,CAAkBO,CAAD,eAAO,KAAC,QAAD,EAAU,GAAG,CAAET,IAAI,CAACS,CAAC,CAACC,KAAH,CAAnB,CAA8B,CAAC,CAAED,CAAjC,EAAxB,CAAP,CACD,CAFiB,CAAlB,CAGA,mBACE,oCACE,qBAAMJ,WAAN,EADF,cAEE,eAAQ,OAAO,CAAE,IAAMvB,iBAAiB,CAACkB,IAAD,CAAxC,sCAFF,CAGGC,KAHH,GADF,CAOD,CAED,QAASU,CAAAA,QAAT,CAAkBZ,KAAlB,CAAyB,CACvB,KAAM,CAACa,IAAD,CAAOC,OAAP,EAAkB9B,QAAQ,CAAC,KAAD,CAAhC,CAEA,GAAI+B,CAAAA,SAAS,CAAG,OAAhB,CACA,GAAIF,IAAJ,CAAU,CACRE,SAAS,CAAGA,SAAS,CAAG,MAAxB,CACD,CACD,mBACE,aACE,OAAO,CAAGC,CAAD,EAAO,CACdF,OAAO,CAAC,CAACD,IAAF,CAAP,CACA;AACA;AACD,CALH,CAME,SAAS,CAAEE,SANb,wBAQE,aAAK,SAAS,CAAC,OAAf,eACEf,KAAK,CAACU,CAAN,CAAQC,KADV,KACkBX,KAAK,CAACU,CAAN,CAAQO,QAD1B,QARF,CAaGJ,IAAI,cAAG,YAAK,SAAS,CAAC,OAAf,UAAwBb,KAAK,CAACI,GAAN,CAAUC,QAAV,CAAmB,CAAnB,CAAxB,EAAH,cAA0D,kBAbjE,GADF,CAiBD","sourcesContent":["import { script_scoreSadir } from \"../../../scripts/Score/CalaulateScoreSadir\";\nimport { useState } from \"react\";\nimport \"./table.css\";\nconst rowStyle = {\n  boxSizing: \"border-box\",\n  flexShrink: 0,\n\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-evenly\",\n  alignItems: \"center\",\n  backgroundColor: \"#f6f8f8\",\n  overflow: \"visible\",\n  borderColor: \"#222\",\n  borderTopWidth: 1,\n  borderBottomWidth: 1,\n  borderLeftWidth: 0,\n  borderRightWidth: 0\n};\n\nexport default function Table(props) {\n  let rows = props.rows;\n  let table = rows.map((row) => (\n    <ul style={rowStyle}>\n      <li>{row._rawData[2]}</li>\n      <li>{row._rawData[3]}</li>\n      <li>{row._rawData[4]}</li>\n    </ul>\n  ));\n\n  let listQutsion = props.bikoretKind.map((subject) => {\n    return subject.list.map((q) => <Quatsion row={rows[q.index]} q={q} />);\n  });\n  return (\n    <div>\n      <div>{listQutsion}</div>\n      <button onClick={() => script_scoreSadir(rows)}>ציון</button>\n      {table}\n    </div>\n  );\n}\n\nfunction Quatsion(props) {\n  const [open, setOpen] = useState(false);\n\n  let className = \"box-2\";\n  if (open) {\n    className = className + \"open\";\n  }\n  return (\n    <div\n      onClick={(e) => {\n        setOpen(!open); \n        //  e.target.classList.add(\"open\");\n        // console.log(e.target.classList);\n      }}\n      className={className}\n    >\n      <div className=\"box-3\"> \n      ({props.q.index} {props.q.quatsion}  </div>\n\n      {/* <div className=\"box-3\">({props.q.index}</div> */}\n\n      {open ? <div className=\"box-3\">{props.row._rawData[3]}</div> : <></>}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}