{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chenb\\\\Downloads\\\\react\\\\src\\\\components\\\\Watch\\\\Sheet\\\\DisplayQuatsion.js\",\n    _s = $RefreshSig$();\n\nimport { Check, Edit } from \"react-feather\";\nimport quatsions from \"../../../../table\";\nimport { useState, useEffect } from \"react\";\nimport { getSheets } from \"../../GoogleSheet/GoogleSheets\";\nimport ReactStars from \"react-rating-stars-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst round = {\n  textAlign: \"center\",\n  flexShrink: 0,\n  minWidth: 210,\n  minHeight: 46,\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-evenly\",\n  alignItems: \"center\",\n  boxShadow: \"2px 2px 3px 1px rgba(0, 0, 0, 0.25)\",\n  overflow: \"visible\",\n  borderRadius: 31\n};\nconst headerInner = {\n  flexShrink: 0,\n  width: \"100%\",\n  height: 33,\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\",\n  overflow: \"visible\"\n};\nconst displayQuatsionStyle = {\n  flexShrink: 0,\n  minWidth: 304,\n  MinHeight: 224,\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"space-evenly\",\n  alignItems: \"center\",\n  boxShadow: \"inset 3px 3px 3px 3px rgba(0, 0, 0, 0.25)\",\n  overflow: \"visible\",\n  borderRadius: 25\n};\nexport default function Display(props) {\n  _s();\n\n  const [watch, setWatch] = useState(true);\n  const [values, setValues] = useState({\n    details: props.rowData[3],\n    found: props.rowData[4],\n    rate: props.rowData[2]\n  });\n  useEffect(() => {\n    // Update the document title using the browser API\n    console.log(values);\n  });\n\n  const getQuatsionByIndex = () => {\n    let text = \"\";\n    quatsions.forEach(subject => {\n      subject.list.forEach(quatsion => {\n        if (quatsion.index === props.index) {\n          text = quatsion.quatsion;\n          console.log(text + \"/\");\n        }\n      });\n    });\n    return text;\n  };\n\n  if (watch) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: displayQuatsionStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [getQuatsionByIndex(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {},\n        style: round,\n        children: props.rowData[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: round,\n        children: props.rowData[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: round,\n        children: props.rowData[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Edit, {\n        onClick: () => setWatch(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  } else {\n    function update() {\n      props.rows[props.index].rate = values.rate; // update a value\n\n      props.rows[props.index].found = values.found; // update a value\n\n      props.rows[props.index].details = values.details; // update a value\n\n      props.rows[props.index].save().then(() => {\n        console.log(\"done\");\n      });\n    } // function ratingChanged(e) {\n    //   let valuesTemp = {};\n    //   valuesTemp.rate = e.target.value;\n    //   valuesTemp.details = values.details;\n    //   valuesTemp.found = values.found;\n    //   setValues(valuesTemp);\n    // }\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: displayQuatsionStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [getQuatsionByIndex(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactStars, {\n        value: values.rate,\n        style: {\n          margin: \"auto\"\n        },\n        count: 6,\n        onChange: e => {\n          let valuesTemp = {};\n          valuesTemp.rate = e;\n          valuesTemp.details = values.details;\n          valuesTemp.found = values.found;\n          setValues(valuesTemp);\n        } // ratingChanged,\n        // setRateById(rate, props.id)\n        ,\n        size: 24,\n        activeColor: \"#ffd700\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"60\",\n        style: round,\n        value: values.rate,\n        onChange: e => {\n          let valuesTemp = {};\n          valuesTemp.rate = e.target.value;\n          valuesTemp.details = values.details;\n          valuesTemp.found = values.found;\n          setValues(valuesTemp);\n          console.log(values);\n        },\n        placeholder: props.rowData[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        cols: \"60\",\n        value: values.found,\n        onChange: e => {\n          let valuesTemp = {};\n          valuesTemp.rate = values.rate;\n          valuesTemp.details = values.details;\n          valuesTemp.found = e.target.value;\n          setValues(valuesTemp);\n          console.log(values);\n        },\n        style: round,\n        placeholder: props.rowData[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Check, {\n        style: {\n          color: \"green\"\n        },\n        onClick: () => {\n          update();\n          setWatch(\"עודכן\");\n          console.log(watch);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Display, \"4haw8PtU4UFvxfE9hr/HVJ9U8OI=\");\n\n_c = Display;\n\nvar _c;\n\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"sources":["C:/Users/chenb/Downloads/react/src/components/Watch/Sheet/DisplayQuatsion.js"],"names":["Check","Edit","quatsions","useState","useEffect","getSheets","ReactStars","round","textAlign","flexShrink","minWidth","minHeight","display","flexDirection","justifyContent","alignItems","boxShadow","overflow","borderRadius","headerInner","width","height","displayQuatsionStyle","MinHeight","Display","props","watch","setWatch","values","setValues","details","rowData","found","rate","console","log","getQuatsionByIndex","text","forEach","subject","list","quatsion","index","update","rows","save","then","margin","e","valuesTemp","target","value","color"],"mappings":"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","sourcesContent":["import { Check, Edit } from \"react-feather\";\nimport quatsions from \"../../../../table\";\nimport { useState, useEffect } from \"react\";\nimport { getSheets } from \"../../GoogleSheet/GoogleSheets\";\nimport ReactStars from \"react-rating-stars-component\";\n\nconst round = {\n  textAlign: \"center\",\n  flexShrink: 0,\n  minWidth: 210,\n  minHeight: 46,\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-evenly\",\n  alignItems: \"center\",\n  boxShadow: \"2px 2px 3px 1px rgba(0, 0, 0, 0.25)\",\n  overflow: \"visible\",\n  borderRadius: 31\n};\n\nconst headerInner = {\n  flexShrink: 0,\n  width: \"100%\",\n  height: 33,\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\",\n  overflow: \"visible\"\n};\n\nconst displayQuatsionStyle = {\n  flexShrink: 0,\n  minWidth: 304,\n  MinHeight: 224,\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"space-evenly\",\n  alignItems: \"center\",\n  boxShadow: \"inset 3px 3px 3px 3px rgba(0, 0, 0, 0.25)\",\n  overflow: \"visible\",\n  borderRadius: 25\n};\n\nexport default function Display(props) {\n  const [watch, setWatch] = useState(true);\n  const [values, setValues] = useState({\n    details: props.rowData[3],\n    found: props.rowData[4],\n    rate: props.rowData[2]\n  });\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    console.log(values);\n  });\n\n  const getQuatsionByIndex = () => {\n    let text = \"\";\n    quatsions.forEach((subject) => {\n      subject.list.forEach((quatsion) => {\n        if (quatsion.index === props.index) {\n          text = quatsion.quatsion;\n          console.log(text + \"/\");\n        }\n      });\n    });\n    return text;\n  };\n\n  if (watch) {\n    return (\n      <div style={displayQuatsionStyle}>\n        <h5>{getQuatsionByIndex()} </h5>\n        <div onClick={() => {}} style={round}>\n          {props.rowData[2]}\n        </div>\n\n        <div style={round}>{props.rowData[3]}</div>\n        <div style={round}>{props.rowData[4]}</div>\n\n        <Edit onClick={() => setWatch(false)} />\n      </div>\n    );\n  } else {\n    function update() {\n      props.rows[props.index].rate = values.rate; // update a value\n      props.rows[props.index].found = values.found; // update a value\n\n      props.rows[props.index].details = values.details; // update a value\n      props.rows[props.index].save().then(() => {\n        console.log(\"done\");\n      });\n    }\n\n    // function ratingChanged(e) {\n    //   let valuesTemp = {};\n    //   valuesTemp.rate = e.target.value;\n    //   valuesTemp.details = values.details;\n    //   valuesTemp.found = values.found;\n\n    //   setValues(valuesTemp);\n    // }\n    return (\n      <div style={displayQuatsionStyle}>\n        <h5>{getQuatsionByIndex()} </h5>\n        <ReactStars\n          value={values.rate}\n          style={{ margin: \"auto\" }}\n          count={6}\n          onChange={\n            (e) => {\n              let valuesTemp = {};\n              valuesTemp.rate = e;\n              valuesTemp.details = values.details;\n              valuesTemp.found = values.found;\n\n              setValues(valuesTemp);\n            }\n            // ratingChanged,\n\n            // setRateById(rate, props.id)\n          }\n          size={24}\n          activeColor=\"#ffd700\"\n        />\n        <textarea\n          rows=\"5\"\n          cols=\"60\"\n          style={round}\n          value={values.rate}\n          onChange={(e) => {\n            let valuesTemp = {};\n            valuesTemp.rate = e.target.value;\n            valuesTemp.details = values.details;\n            valuesTemp.found = values.found;\n\n            setValues(valuesTemp);\n            console.log(values);\n          }}\n          placeholder={props.rowData[2]}\n        />\n        <textarea\n          rows=\"5\"\n          cols=\"60\"\n          value={values.found}\n          onChange={(e) => {\n            let valuesTemp = {};\n            valuesTemp.rate = values.rate;\n\n            valuesTemp.details = values.details;\n            valuesTemp.found = e.target.value;\n\n            setValues(valuesTemp);\n            console.log(values);\n          }}\n          style={round}\n          placeholder={props.rowData[4]}\n        />{\" \"}\n        <br />\n        <Check\n          style={{ color: \"green\" }}\n          onClick={() => {\n            update();\n            setWatch(\"עודכן\");\n            console.log(watch);\n          }}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}