{"ast":null,"code":"import{getSheets}from\"../GoogleSheet/GoogleSheets\";import{useEffect,useState}from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const sheet={margin:12,boxSizing:\"border-box\",flexShrink:0,maxWidth:\"79%\",height:\"31%\",display:\"flex\",flexDirection:\"row\",justifyContent:\"center\",alignItems:\"center\",padding:\"29px 92px 29px 92px\",boxShadow:\"3px 3px 3px 3px rgba(0, 0, 0, 0.25)\",overflow:\"visible\",borderRadius:42,border:\"1px solid rgba(34, 34, 34, 0.26)\"};export default function ListSheets(props){const[sheetsMeta,setSheetsMeta]=useState(null);useEffect(()=>{let sheets=[];getSheets().then(res=>{for(var key in res._rawSheets){if(res._rawSheets.hasOwnProperty(key)){let sheet={title:res._rawSheets[key]._rawProperties.title,index:res._rawSheets[key]._rawProperties.index};sheets.push(sheet);}}setSheetsMeta(sheets);});},[]);if(sheetsMeta!==null){const listSheets=sheetsMeta.map(item=>/*#__PURE__*/_jsx(\"div\",{onClick:()=>props.setIsSheet(item.index),style:sheet,children:/*#__PURE__*/_jsxs(\"h3\",{children:[\" \",item.title,\"=\",item.index]})},item.index.toString()));return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"br\",{}),listSheets]});}return/*#__PURE__*/_jsx(\"p\",{children:\"try to get info\"});}","map":{"version":3,"sources":["C:/Users/chenb/Downloads/react/src/components/Watch/ListSheets.js"],"names":["getSheets","useEffect","useState","sheet","margin","boxSizing","flexShrink","maxWidth","height","display","flexDirection","justifyContent","alignItems","padding","boxShadow","overflow","borderRadius","border","ListSheets","props","sheetsMeta","setSheetsMeta","sheets","then","res","key","_rawSheets","hasOwnProperty","title","_rawProperties","index","push","listSheets","map","item","setIsSheet","toString"],"mappings":"AAAA,OAASA,SAAT,KAA0B,6BAA1B,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,OAApC,C,6IAGA,KAAMC,CAAAA,KAAK,CAAG,CACZC,MAAM,CAAE,EADI,CAEZC,SAAS,CAAE,YAFC,CAGZC,UAAU,CAAE,CAHA,CAIZC,QAAQ,CAAE,KAJE,CAKZC,MAAM,CAAE,KALI,CAMZC,OAAO,CAAE,MANG,CAOZC,aAAa,CAAE,KAPH,CAQZC,cAAc,CAAE,QARJ,CASZC,UAAU,CAAE,QATA,CAUZC,OAAO,CAAE,qBAVG,CAWZC,SAAS,CAAE,qCAXC,CAYZC,QAAQ,CAAE,SAZE,CAaZC,YAAY,CAAE,EAbF,CAcZC,MAAM,CAAE,kCAdI,CAAd,CAiBA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACxC,KAAM,CAACC,UAAD,CAAaC,aAAb,EAA8BnB,QAAQ,CAAC,IAAD,CAA5C,CACAD,SAAS,CAAC,IAAM,CACd,GAAIqB,CAAAA,MAAM,CAAG,EAAb,CACAtB,SAAS,GAAGuB,IAAZ,CAAkBC,GAAD,EAAS,CACxB,IAAK,GAAIC,CAAAA,GAAT,GAAgBD,CAAAA,GAAG,CAACE,UAApB,CAAgC,CAC9B,GAAIF,GAAG,CAACE,UAAJ,CAAeC,cAAf,CAA8BF,GAA9B,CAAJ,CAAwC,CACtC,GAAItB,CAAAA,KAAK,CAAG,CACVyB,KAAK,CAAEJ,GAAG,CAACE,UAAJ,CAAeD,GAAf,EAAoBI,cAApB,CAAmCD,KADhC,CAEVE,KAAK,CAAEN,GAAG,CAACE,UAAJ,CAAeD,GAAf,EAAoBI,cAApB,CAAmCC,KAFhC,CAAZ,CAIAR,MAAM,CAACS,IAAP,CAAY5B,KAAZ,EACD,CACF,CACDkB,aAAa,CAACC,MAAD,CAAb,CACD,CAXD,EAYD,CAdQ,CAcN,EAdM,CAAT,CAgBA,GAAIF,UAAU,GAAK,IAAnB,CAAyB,CACvB,KAAMY,CAAAA,UAAU,CAAGZ,UAAU,CAACa,GAAX,CAAgBC,IAAD,eAChC,YACE,OAAO,CAAE,IAAMf,KAAK,CAACgB,UAAN,CAAiBD,IAAI,CAACJ,KAAtB,CADjB,CAGE,KAAK,CAAE3B,KAHT,uBAKE,sBACG,GADH,CAEG+B,IAAI,CAACN,KAFR,KAEgBM,IAAI,CAACJ,KAFrB,GALF,EAEOI,IAAI,CAACJ,KAAL,CAAWM,QAAX,EAFP,CADiB,CAAnB,CAYA,mBACE,wCACE,aADF,CAEGJ,UAFH,GADF,CAMD,CACD,mBAAO,sCAAP,CACD","sourcesContent":["import { getSheets } from \"../GoogleSheet/GoogleSheets\";\nimport { useEffect, useState } from \"react\";\n\n\nconst sheet = {\n  margin: 12,\n  boxSizing: \"border-box\",\n  flexShrink: 0,\n  maxWidth: \"79%\",\n  height: \"31%\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  padding: \"29px 92px 29px 92px\",\n  boxShadow: \"3px 3px 3px 3px rgba(0, 0, 0, 0.25)\",\n  overflow: \"visible\",\n  borderRadius: 42,\n  border: \"1px solid rgba(34, 34, 34, 0.26)\"\n};\n\nexport default function ListSheets(props) {\n  const [sheetsMeta, setSheetsMeta] = useState(null);\n  useEffect(() => {\n    let sheets = [];\n    getSheets().then((res) => {\n      for (var key in res._rawSheets) {\n        if (res._rawSheets.hasOwnProperty(key)) {\n          let sheet = {\n            title: res._rawSheets[key]._rawProperties.title,\n            index: res._rawSheets[key]._rawProperties.index\n          };\n          sheets.push(sheet);\n        }\n      }\n      setSheetsMeta(sheets);\n    });\n  }, []);\n\n  if (sheetsMeta !== null) {\n    const listSheets = sheetsMeta.map((item) => (\n      <div\n        onClick={() => props.setIsSheet(item.index)}\n        key={item.index.toString()}\n        style={sheet}\n      >\n        <h3>\n          {\" \"}\n          {item.title}={item.index}\n        </h3>\n      </div>\n    ));\n    return (\n      <>\n        <br />\n        {listSheets}\n      </>\n    );\n  }\n  return <p>try to get info</p>;\n}\n"]},"metadata":{},"sourceType":"module"}