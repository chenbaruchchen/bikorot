{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chenb\\\\Downloads\\\\react\\\\src\\\\components\\\\Add-new\\\\Quatsion.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Model from \"./Model\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst quatsionStyle = {\n  backgroundColor: \"white\",\n  margin: \"10px\",\n  padding: \"10px\",\n  width: \"70vw\"\n  /* 841px */\n  ,\n  height: \"auto\"\n  /* 19px */\n  ,\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  boxShadow: \"2px 2px 2px 0px rgba(0, 0, 0, 0.3)\",\n  overflow: \"hidden\",\n  borderRadius: 21,\n  textOverflow: \"ellipsis\",\n  whiteSpace: \"nowrap\"\n};\nexport default function Quatsion(props) {\n  _s();\n\n  const [openModel, setOpemModel] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [openModel && /*#__PURE__*/_jsxDEV(Model, {\n      setOpemModel: setOpemModel,\n      openModel: openModel,\n      quatsion: props.quatsion,\n      answers: props.answers,\n      setAnswers: props.setAnswers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        setOpemModel(true);\n      },\n      style: quatsionStyle,\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        style: {\n          textOverflow: \"ellipsis\",\n          overflow: \"hidden\",\n          whiteSpace: \"nowrap\"\n        },\n        children: [props.quatsion.quatsion, \"/\", props.quatsion.index]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Quatsion, \"TrXV2JdF9nUlH5pkGhTFbW/ad0c=\");\n\n_c = Quatsion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quatsion\");","map":{"version":3,"sources":["C:/Users/chenb/Downloads/react/src/components/Add-new/Quatsion.js"],"names":["useState","Model","quatsionStyle","backgroundColor","margin","padding","width","height","display","flexDirection","justifyContent","alignItems","boxShadow","overflow","borderRadius","textOverflow","whiteSpace","Quatsion","props","openModel","setOpemModel","quatsion","answers","setAnswers","index"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,eAAe,EAAE,OADG;AAGpBC,EAAAA,MAAM,EAAE,MAHY;AAIpBC,EAAAA,OAAO,EAAE,MAJW;AAKpBC,EAAAA,KAAK,EAAE;AAAO;AALM;AAMpBC,EAAAA,MAAM,EAAE;AAAO;AANK;AAOpBC,EAAAA,OAAO,EAAE,MAPW;AAQpBC,EAAAA,aAAa,EAAE,KARK;AASpBC,EAAAA,cAAc,EAAE,QATI;AAUpBC,EAAAA,UAAU,EAAE,QAVQ;AAWpBC,EAAAA,SAAS,EAAE,oCAXS;AAYpBC,EAAAA,QAAQ,EAAE,QAZU;AAapBC,EAAAA,YAAY,EAAE,EAbM;AAcpBC,EAAAA,YAAY,EAAE,UAdM;AAepBC,EAAAA,UAAU,EAAE;AAfQ,CAAtB;AAkBA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,KAAD,CAA1C;AACA,sBACE;AAAA,eACGmB,SAAS,iBACR,QAAC,KAAD;AACE,MAAA,YAAY,EAAEC,YADhB;AAEE,MAAA,SAAS,EAAED,SAFb;AAGE,MAAA,QAAQ,EAAED,KAAK,CAACG,QAHlB;AAIE,MAAA,OAAO,EAAEH,KAAK,CAACI,OAJjB;AAKE,MAAA,UAAU,EAAEJ,KAAK,CAACK;AALpB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUE;AACE,MAAA,OAAO,EAAE,MAAM;AACbH,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAHH;AAIE,MAAA,KAAK,EAAElB,aAJT;AAAA,6BAME;AACE,QAAA,KAAK,EAAE;AACLa,UAAAA,YAAY,EAAE,UADT;AAELF,UAAAA,QAAQ,EAAE,QAFL;AAGLG,UAAAA,UAAU,EAAE;AAHP,SADT;AAAA,mBAOGE,KAAK,CAACG,QAAN,CAAeA,QAPlB,OAO6BH,KAAK,CAACG,QAAN,CAAeG,KAP5C;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AA6BD;;GA/BuBP,Q;;KAAAA,Q","sourcesContent":["import { useState } from \"react\";\nimport Model from \"./Model\";\nconst quatsionStyle = {\n  backgroundColor: \"white\",\n\n  margin: \"10px\",\n  padding: \"10px\",\n  width: \"70vw\" /* 841px */,\n  height: \"auto\" /* 19px */,\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  boxShadow: \"2px 2px 2px 0px rgba(0, 0, 0, 0.3)\",\n  overflow: \"hidden\",\n  borderRadius: 21,\n  textOverflow: \"ellipsis\",\n  whiteSpace: \"nowrap\"\n};\n\nexport default function Quatsion(props) {\n  const [openModel, setOpemModel] = useState(false);\n  return (\n    <>\n      {openModel && (\n        <Model\n          setOpemModel={setOpemModel}\n          openModel={openModel}\n          quatsion={props.quatsion}\n          answers={props.answers}\n          setAnswers={props.setAnswers}\n        />\n      )}\n      <div\n        onClick={() => {\n          setOpemModel(true);\n        }}\n        style={quatsionStyle}\n      >\n        <h5\n          style={{\n            textOverflow: \"ellipsis\",\n            overflow: \"hidden\",\n            whiteSpace: \"nowrap\"\n          }}\n        >\n          {props.quatsion.quatsion}/{props.quatsion.index}\n        </h5>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}